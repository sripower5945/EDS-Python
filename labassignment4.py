# -*- coding: utf-8 -*-
"""LabAssignment4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zcgpy4brFWrD00ya2GKWkO2MnPkjG6zL
"""

import pandas as pd
data=pd.read_csv("/content/student_data.csv")
dafr=pd.DataFrame(data.head(50))
data1=pd.read_csv("/content/grainsales.csv")
datf=pd.DataFrame(data1)

"""Which was the best month for sales? How much was earned that month?

"""

mearnings = datf.groupby('Months')['Sales'].sum()
bmonth = mearnings.idxmax()
earnings_in_best_month = mearnings.loc[bmonth]
print(earnings_in_best_month,bmonth)

"""Which product sold the most?"""

gearnings = datf.groupby('GrainName')['Sales'].sum()
grain_month = gearnings.idxmax()
earnings_in_best_mont = gearnings.loc[grain_month]
print(earnings_in_best_mont,grain_month)

"""Which city sold the most products?"""

city_sales = datf['City'].value_counts()
print(datf['City'].value_counts())
city_with_most_sales = city_sales.idxmax()
print(city_with_most_sales)

"""What Products are most often sold together?

"""

product_combinations = datf.groupby(['GrainName', 'State'])['Sales'].count()
most_sold_together = product_combinations.idxmax()
print("Products most often sold together:", most_sold_together)

"""What is the percentage of students in each field of study compared to the total number of students?


"""

print(dafr['Field of Study'].value_counts() / len(dafr) * 100)

"""Find the students who were admitted in a specific year:"""

students_admitted_in_year = dafr[dafr['Year of Admission'] == 2021]
print(students_admitted_in_year)

"""Sort the students by their expected year of graduation"""

sorted_students_by_graduation = dafr.sort_values('Expected Year of Graduation')
print(sorted_students_by_graduation)

"""Calculate the total fees collected from all students:"""

total_fees_collected = df['Fees'].sum()
print(total_fees_collected)

"""Find the students who were admitted before a certain year and are in a specific semester:"""

students_before_year_in_semester = dafr[(dafr['Year of Admission'] < 2021) & (dafr['Current Semester'] == 4)]
print(students_before_year_in_semester)

"""Calculate the total fees collected from students in each field of study:"""

fees_collected_per_field = df.groupby('Field of Study')['Fees'].sum()
print(fees_collected_per_field)

"""Calculate the total discount percentage on fees:"""

total_discount_percentage = (df['Discount on Fees'].sum() / df['Fees'].sum()) * 100
print(total_discount_percentage)

"""Get the student names and their corresponding years of admission for a specific field of study:

"""

students_and_admission_years_in_field = dafr.loc[dafr['Field of Study'] == 'Computer Science', ['Student Name', 'Year of Admission']]
print(students_and_admission_years_in_field)

"""Find the students who have a higher discount on fees than their average discount in their field of study:"""

students_above_average_discount = dafr[dafr['Discount on Fees'] > dafr.groupby('Field of Study')['Discount on Fees'].transform('mean')]
print(students_above_average_discount)

"""Find the students who have the same field of study and specialization:"""

filtered_df = dafr[(dafr['Field of Study'] == 'Computer Science') & (dafr['Specialization'] == 'Artificial Intelligence')]
print(filtered_df)